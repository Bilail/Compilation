
** Conflict (shift/reduce) in state 68.
** Token involved: SELECTION
** This state is reached from prog after reading:

list(classe) LBRACKET ID

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

prog 
list(classe) block EOF 
             LBRACKET list(instruction) RBRACKET 
                      instruction list(instruction) 
                      container ASSIGN expression SEMICOLON 
                      containerA 
                      (?)

** In state 68, looking ahead at SELECTION, reducing production
** containerA -> ID
** is permitted because of the following sub-derivation:

methodeCallA SELECTION ID 
containerA SELECTION ID argumentsList // lookahead token appears
ID . 

** In state 68, looking ahead at SELECTION, shifting is permitted
** because of the following sub-derivation:

ID . SELECTION containerA 

** Conflict (shift/reduce) in state 49.
** Token involved: SELECTION
** This state is reached from prog after reading:

list(classe) LBRACKET ID argumentsList

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

prog 
list(classe) block EOF 
             LBRACKET list(instruction) RBRACKET 
                      instruction list(instruction) 
                      container ASSIGN expression SEMICOLON 
                      containerA 
                      (?)

** In state 49, looking ahead at SELECTION, reducing production
** methodeCallA -> ID argumentsList
** is permitted because of the following sub-derivation:

methodeCallA SELECTION ID // lookahead token appears
ID argumentsList . 

** In state 49, looking ahead at SELECTION, shifting is permitted
** because of the following sub-derivation:

methodeCallA SELECTION ID 
ID argumentsList . SELECTION methodeCallA 

** Conflict (shift/reduce) in state 43.
** Token involved: SELECTION
** This state is reached from prog after reading:

list(classe) LBRACKET THIS SELECTION ID

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

prog 
list(classe) block EOF 
             LBRACKET list(instruction) RBRACKET 
                      instruction list(instruction) 
                      container ASSIGN expression SEMICOLON 
                      THIS SELECTION containerA 
                                     (?)

** In state 43, looking ahead at SELECTION, reducing production
** containerA -> ID
** is permitted because of the following sub-derivation:

methodeCallA SELECTION ID 
containerA SELECTION ID argumentsList // lookahead token appears
ID . 

** In state 43, looking ahead at SELECTION, shifting is permitted
** because of the following sub-derivation:

ID . SELECTION containerA 
